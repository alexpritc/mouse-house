//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Camera"",
            ""id"": ""b5d9c046-be9f-46e7-a1a2-1c0fc7cf529e"",
            ""actions"": [
                {
                    ""name"": ""RotateCamera"",
                    ""type"": ""Button"",
                    ""id"": ""f70339bb-1b34-4057-8213-5df700c748ca"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GetMouseStartPos"",
                    ""type"": ""Button"",
                    ""id"": ""71fbaafd-7849-44c4-97c6-fb58031f3b2b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PanCamera"",
                    ""type"": ""Button"",
                    ""id"": ""8889d79e-448c-4484-b581-9bd90b395154"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""7f58da7f-4b37-4ffa-8b41-25c381987d97"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraZoom"",
                    ""type"": ""Value"",
                    ""id"": ""55800197-68ca-4440-8d01-5eb8d0983e0f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""850aaba9-b1c7-4a8c-b15e-f7cad1727971"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Up"",
                    ""type"": ""Button"",
                    ""id"": ""691953f9-2b48-4126-b785-27f448b598f0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down"",
                    ""type"": ""Button"",
                    ""id"": ""adc7dde8-fc1a-4117-ae5c-be4c8bf8baee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fb017360-8117-4a42-8457-0b86486d4199"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a93bd95-8626-40b8-8307-5531316b8ad7"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GetMouseStartPos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b9bef80e-ec23-457a-8d19-e4db0c424db6"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GetMouseStartPos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d37acfce-342a-45b4-929b-d1a1137f6df4"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c03fd67-f216-4af2-942f-7334e7f0f31d"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PanCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cf7780b5-5564-4ea9-a9ed-b577e3c1a8ba"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""79991a35-e0cf-4851-8d2f-3470e271fcf6"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d7889f8e-8b57-491a-bcc3-14f268a74a32"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""23fe0779-f974-40c0-bd7d-d685c5fa4e55"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""39ccc177-b7c5-436e-9054-68814070cf02"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ae6ad604-21d4-4b4e-a744-337ea1eabf2e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8489ecbb-4fb1-43e9-8be7-46c0e48b62a0"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""78fe8ce2-aa2c-4184-971e-fc01767a8320"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Item"",
            ""id"": ""30affd5c-4b0c-496c-855c-04c87656d95f"",
            ""actions"": [
                {
                    ""name"": ""PlaceItem"",
                    ""type"": ""Button"",
                    ""id"": ""137ccb43-f3e2-4652-9e0c-af353fd98d30"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateItem"",
                    ""type"": ""Button"",
                    ""id"": ""6ea41191-e727-4524-841a-80e0cef0b3d7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c4deed6f-38db-43a2-900b-671416a9baba"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlaceItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b245886-b4c9-46f4-b8c2-d30a2e900b60"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""GameManager"",
            ""id"": ""30db338e-2296-49b2-881d-da0451ef269b"",
            ""actions"": [
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""9f26df88-7cee-4412-97ae-68ad1f6319d7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""e19f70b5-0a48-46d7-97dd-c85e85963898"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""596083e7-d7a3-4d78-b28c-d640a222cf4b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da09e2b6-ff97-400d-9828-d2d7ab91967e"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Camera
        m_Camera = asset.FindActionMap("Camera", throwIfNotFound: true);
        m_Camera_RotateCamera = m_Camera.FindAction("RotateCamera", throwIfNotFound: true);
        m_Camera_GetMouseStartPos = m_Camera.FindAction("GetMouseStartPos", throwIfNotFound: true);
        m_Camera_PanCamera = m_Camera.FindAction("PanCamera", throwIfNotFound: true);
        m_Camera_MousePosition = m_Camera.FindAction("MousePosition", throwIfNotFound: true);
        m_Camera_CameraZoom = m_Camera.FindAction("CameraZoom", throwIfNotFound: true);
        m_Camera_Movement = m_Camera.FindAction("Movement", throwIfNotFound: true);
        m_Camera_Up = m_Camera.FindAction("Up", throwIfNotFound: true);
        m_Camera_Down = m_Camera.FindAction("Down", throwIfNotFound: true);
        // Item
        m_Item = asset.FindActionMap("Item", throwIfNotFound: true);
        m_Item_PlaceItem = m_Item.FindAction("PlaceItem", throwIfNotFound: true);
        m_Item_RotateItem = m_Item.FindAction("RotateItem", throwIfNotFound: true);
        // GameManager
        m_GameManager = asset.FindActionMap("GameManager", throwIfNotFound: true);
        m_GameManager_Select = m_GameManager.FindAction("Select", throwIfNotFound: true);
        m_GameManager_Menu = m_GameManager.FindAction("Menu", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Camera
    private readonly InputActionMap m_Camera;
    private ICameraActions m_CameraActionsCallbackInterface;
    private readonly InputAction m_Camera_RotateCamera;
    private readonly InputAction m_Camera_GetMouseStartPos;
    private readonly InputAction m_Camera_PanCamera;
    private readonly InputAction m_Camera_MousePosition;
    private readonly InputAction m_Camera_CameraZoom;
    private readonly InputAction m_Camera_Movement;
    private readonly InputAction m_Camera_Up;
    private readonly InputAction m_Camera_Down;
    public struct CameraActions
    {
        private @Controls m_Wrapper;
        public CameraActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @RotateCamera => m_Wrapper.m_Camera_RotateCamera;
        public InputAction @GetMouseStartPos => m_Wrapper.m_Camera_GetMouseStartPos;
        public InputAction @PanCamera => m_Wrapper.m_Camera_PanCamera;
        public InputAction @MousePosition => m_Wrapper.m_Camera_MousePosition;
        public InputAction @CameraZoom => m_Wrapper.m_Camera_CameraZoom;
        public InputAction @Movement => m_Wrapper.m_Camera_Movement;
        public InputAction @Up => m_Wrapper.m_Camera_Up;
        public InputAction @Down => m_Wrapper.m_Camera_Down;
        public InputActionMap Get() { return m_Wrapper.m_Camera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraActions set) { return set.Get(); }
        public void SetCallbacks(ICameraActions instance)
        {
            if (m_Wrapper.m_CameraActionsCallbackInterface != null)
            {
                @RotateCamera.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnRotateCamera;
                @RotateCamera.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnRotateCamera;
                @RotateCamera.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnRotateCamera;
                @GetMouseStartPos.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnGetMouseStartPos;
                @GetMouseStartPos.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnGetMouseStartPos;
                @GetMouseStartPos.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnGetMouseStartPos;
                @PanCamera.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnPanCamera;
                @PanCamera.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnPanCamera;
                @PanCamera.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnPanCamera;
                @MousePosition.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnMousePosition;
                @MousePosition.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnMousePosition;
                @MousePosition.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnMousePosition;
                @CameraZoom.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnCameraZoom;
                @CameraZoom.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnCameraZoom;
                @CameraZoom.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnCameraZoom;
                @Movement.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnMovement;
                @Up.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnUp;
                @Up.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnUp;
                @Up.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnUp;
                @Down.started -= m_Wrapper.m_CameraActionsCallbackInterface.OnDown;
                @Down.performed -= m_Wrapper.m_CameraActionsCallbackInterface.OnDown;
                @Down.canceled -= m_Wrapper.m_CameraActionsCallbackInterface.OnDown;
            }
            m_Wrapper.m_CameraActionsCallbackInterface = instance;
            if (instance != null)
            {
                @RotateCamera.started += instance.OnRotateCamera;
                @RotateCamera.performed += instance.OnRotateCamera;
                @RotateCamera.canceled += instance.OnRotateCamera;
                @GetMouseStartPos.started += instance.OnGetMouseStartPos;
                @GetMouseStartPos.performed += instance.OnGetMouseStartPos;
                @GetMouseStartPos.canceled += instance.OnGetMouseStartPos;
                @PanCamera.started += instance.OnPanCamera;
                @PanCamera.performed += instance.OnPanCamera;
                @PanCamera.canceled += instance.OnPanCamera;
                @MousePosition.started += instance.OnMousePosition;
                @MousePosition.performed += instance.OnMousePosition;
                @MousePosition.canceled += instance.OnMousePosition;
                @CameraZoom.started += instance.OnCameraZoom;
                @CameraZoom.performed += instance.OnCameraZoom;
                @CameraZoom.canceled += instance.OnCameraZoom;
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Up.started += instance.OnUp;
                @Up.performed += instance.OnUp;
                @Up.canceled += instance.OnUp;
                @Down.started += instance.OnDown;
                @Down.performed += instance.OnDown;
                @Down.canceled += instance.OnDown;
            }
        }
    }
    public CameraActions @Camera => new CameraActions(this);

    // Item
    private readonly InputActionMap m_Item;
    private IItemActions m_ItemActionsCallbackInterface;
    private readonly InputAction m_Item_PlaceItem;
    private readonly InputAction m_Item_RotateItem;
    public struct ItemActions
    {
        private @Controls m_Wrapper;
        public ItemActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @PlaceItem => m_Wrapper.m_Item_PlaceItem;
        public InputAction @RotateItem => m_Wrapper.m_Item_RotateItem;
        public InputActionMap Get() { return m_Wrapper.m_Item; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ItemActions set) { return set.Get(); }
        public void SetCallbacks(IItemActions instance)
        {
            if (m_Wrapper.m_ItemActionsCallbackInterface != null)
            {
                @PlaceItem.started -= m_Wrapper.m_ItemActionsCallbackInterface.OnPlaceItem;
                @PlaceItem.performed -= m_Wrapper.m_ItemActionsCallbackInterface.OnPlaceItem;
                @PlaceItem.canceled -= m_Wrapper.m_ItemActionsCallbackInterface.OnPlaceItem;
                @RotateItem.started -= m_Wrapper.m_ItemActionsCallbackInterface.OnRotateItem;
                @RotateItem.performed -= m_Wrapper.m_ItemActionsCallbackInterface.OnRotateItem;
                @RotateItem.canceled -= m_Wrapper.m_ItemActionsCallbackInterface.OnRotateItem;
            }
            m_Wrapper.m_ItemActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PlaceItem.started += instance.OnPlaceItem;
                @PlaceItem.performed += instance.OnPlaceItem;
                @PlaceItem.canceled += instance.OnPlaceItem;
                @RotateItem.started += instance.OnRotateItem;
                @RotateItem.performed += instance.OnRotateItem;
                @RotateItem.canceled += instance.OnRotateItem;
            }
        }
    }
    public ItemActions @Item => new ItemActions(this);

    // GameManager
    private readonly InputActionMap m_GameManager;
    private IGameManagerActions m_GameManagerActionsCallbackInterface;
    private readonly InputAction m_GameManager_Select;
    private readonly InputAction m_GameManager_Menu;
    public struct GameManagerActions
    {
        private @Controls m_Wrapper;
        public GameManagerActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Select => m_Wrapper.m_GameManager_Select;
        public InputAction @Menu => m_Wrapper.m_GameManager_Menu;
        public InputActionMap Get() { return m_Wrapper.m_GameManager; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameManagerActions set) { return set.Get(); }
        public void SetCallbacks(IGameManagerActions instance)
        {
            if (m_Wrapper.m_GameManagerActionsCallbackInterface != null)
            {
                @Select.started -= m_Wrapper.m_GameManagerActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_GameManagerActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_GameManagerActionsCallbackInterface.OnSelect;
                @Menu.started -= m_Wrapper.m_GameManagerActionsCallbackInterface.OnMenu;
                @Menu.performed -= m_Wrapper.m_GameManagerActionsCallbackInterface.OnMenu;
                @Menu.canceled -= m_Wrapper.m_GameManagerActionsCallbackInterface.OnMenu;
            }
            m_Wrapper.m_GameManagerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
                @Menu.started += instance.OnMenu;
                @Menu.performed += instance.OnMenu;
                @Menu.canceled += instance.OnMenu;
            }
        }
    }
    public GameManagerActions @GameManager => new GameManagerActions(this);
    public interface ICameraActions
    {
        void OnRotateCamera(InputAction.CallbackContext context);
        void OnGetMouseStartPos(InputAction.CallbackContext context);
        void OnPanCamera(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnCameraZoom(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnUp(InputAction.CallbackContext context);
        void OnDown(InputAction.CallbackContext context);
    }
    public interface IItemActions
    {
        void OnPlaceItem(InputAction.CallbackContext context);
        void OnRotateItem(InputAction.CallbackContext context);
    }
    public interface IGameManagerActions
    {
        void OnSelect(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
    }
}
